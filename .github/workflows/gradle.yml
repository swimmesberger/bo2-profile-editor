# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI Build

on:
  push:
    tags:
      - "v*"
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: 
    inputs: {}

jobs:
  build:
    name: Builds Windows Native CLI
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: 'Setup Java 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up Visual C Build Tools Workload for Visual Studio 2019 Build Tools
      run: |
        choco install visualstudio2019-workload-vctools
    - name: Build with Gradle
      run: ./gradlew build nativeImage
      env: 
        VC_VARS_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat'

    - name: 'Get Version Number'
      run: |
        echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"
      shell: bash
      
    - name: 'Publish JAR'
      uses: actions/upload-artifact@v2-preview
      with:
        name: 'bo2-profile-editor-${{env.VERSION}}.jar'
        path: 'build/libs/bo2-profile-editor-${{env.VERSION}}-all.jar'
    - name: 'Publish Window Native'
      uses: actions/upload-artifact@v2-preview
      with:
        name: 'bo2-profile-editor-${{env.VERSION}}.exe'
        path: 'build/graal/bo2-profile-editor-${{env.VERSION}}.exe'

    - name: 'Create Release'
      if: contains(github.ref, 'v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{github.ref}}
        release_name: Release ${{github.ref}}
        body: |
          Release of version ${{github.ref}}
        draft: false
        prerelease: false
    - name: 'Release JAR Asset'
      if: contains(github.ref, 'v')
      id: upload-release-asset-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_name: 'bo2-profile-editor-${{env.VERSION}}.jar'
        asset_path: 'build/libs/bo2-profile-editor-${{env.VERSION}}-all.jar'
        asset_content_type: application/java-archive
    - name: 'Release Windows Native Asset'
      if: success() && contains(github.ref, 'v')
      id: upload-release-asset-exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_name: 'bo2-profile-editor-${{env.VERSION}}.exe'
        asset_path: 'build/graal/bo2-profile-editor-${{env.VERSION}}.exe'
        asset_content_type: application/octet-stream

    - name: 'Write Upload URL To File'
      if: contains(github.ref, 'v')
      run: |
        echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt
    - name: 'Publish Upload URL'
      if: contains(github.ref, 'v')
      uses: actions/upload-artifact@v2-preview
      with:
        name: 'upload_url.txt'
        path: 'upload_url.txt'
